import Head from "next/head";
import styles from "@/styles/Home.module.css";
import React from "react";
import {
  createUserWithEmailAndPassword,
  getAuth,
  GoogleAuthProvider,
  signInAnonymously,
  signInWithCustomToken,
  signInWithEmailAndPassword,
  signInWithPopup,
  signOut,
  UserCredential,
} from "firebase/auth";

export default function Home() {
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [customToken, setCustomToken] = React.useState("");

  const idtoken = async () => {
    const auth = getAuth();
    signInWithCustomToken(auth, customToken)
      .then((userCredential) => {
        // Signed in
        const user = userCredential.user;
        console.log(user);
        // ...
      })
      .catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        // ...
      });
  };

  const googleLogin = async () => {
    const provider = new GoogleAuthProvider();
    const auth = getAuth();
    const user: UserCredential | any = await signInWithPopup(auth, provider)
      .then((result) => {
        return result.user;
        // ...
      })
      .catch((error) => {
        // Handle Errors here.
        const errorCode = error.code;
        const errorMessage = error.message;
        // The email of the user's account used.
        const email = error.customData.email;
        // The AuthCredential type that was used.
        const credential = GoogleAuthProvider.credentialFromError(error);
        // ...
      });
    console.log({ user });
  };

  const credentialSignup = () => {
    const auth = getAuth();
    createUserWithEmailAndPassword(auth, email, password)
      .then((user) => {
        console.log(user.user);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  const credentialLogin = () => {
    const auth = getAuth();
    signInWithEmailAndPassword(auth, email, password)
      .then((user) => {
        console.log(user.user);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  const signOutall = () => {
    const auth = getAuth();

    signOut(auth)
      .then((r) => {
        console.log({ r });
        // Sign-out successful.
      })
      .catch((error) => {
        // An error happened.
      });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <button onClick={googleLogin}>Google Login</button>
        <label>email</label>
        <input
          onChange={(e) => {
            setEmail(e.target.value);
          }}
        ></input>
        <label>password</label>
        <input
          onChange={(e) => {
            setPassword(e.target.value);
          }}
        ></input>
        <label>customToken</label>
        <input
          onChange={(e) => {
            setCustomToken(e.target.value);
          }}
        ></input>
        <button onClick={credentialSignup}>Credential Sign Up</button>
        <button onClick={credentialLogin}>Credential Log In</button>
        <button onClick={signOutall}>Sign out All</button>
        <button onClick={idtoken}>custom Token</button>
      </main>
    </>
  );
}
